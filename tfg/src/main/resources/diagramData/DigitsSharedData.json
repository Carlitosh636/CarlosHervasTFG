{
  "type" : "COMPLEX",
  "heading" : "Dado una lista 'a' de números enteros no negativos con tamaño n, devolver un set que contenga los dígitos comunes entre todos los números\nEjemplo: f([2348, 1349, 7523, 3215]) -> [3]\nEjemplo: f([2348, 134, 7523, 99]) -> []",
  "params" : {
    "a" : ""
  },
  "currentProblemSize" : 0,
  "currentReduction" : 0,
  "currentReductionSolutions" : 0,
  "reducedOperation" : "",
  "problemSizeChoices" : [ "n == len(a)" ],
  "currentBaseCaseIndex" : 0,
  "baseCaseChoices" : [ [ "n == 1" ] ],
  "baseCaseParameters" : [ [ "0" ] ],
  "returnValues" : [["get_digit_set(a[0])"]],
  "reductionChoices" : [ ["ele = a[0]\na.remove(ele)", "l = a[0:n//2]\nr = a[n//2:n]"] ],
  "solutionsChoices" : [["Unión de dígitos comunes entre f' y ele","Intersección de dígitos comunes entre f' y ele","Diferencia de dígitos comunes entre f' y ele"],["Unión de dígitos comunes entre l y r","Intersección de dígitos comunes entre l y r", "Diferencia de dígitos comunes entre l y r"]],
  "recursiveCases" :[
    [
      "ele = a[0]\nreturn digits_shared_lineal(a[1:]).union(get_digit_set(ele))",
      "ele = a[0]\nreturn digits_shared_lineal(a[1:]).intersection(get_digit_set(ele))",
      "ele = a[0]\nreturn digits_shared_lineal(a[1:]).difference(get_digit_set(ele))"
    ],
    [
      "mid = n // 2\na1 = digits_shared_dyv(a[0:mid])\na2 = digits_shared_dyv(a[mid:n])\nreturn a1.union(a2)",
      "mid = n // 2\na1 = digits_shared_dyv(a[0:mid])\na2 = digits_shared_dyv(a[mid:n])\nreturn a1.intersection(a2)",
      "mid = n // 2\na1 = digits_shared_dyv(a[0:mid])\na2 = digits_shared_dyv(a[mid:n])\nreturn a1.difference(a2)"
    ]
  ],
  "correctSizeChoices": [0],
  "correctBaseCases": [[0]],
  "correctSolutions" : [ 1,1 ],
  "incorrectProblemSizeText" : [],
  "incorrectBaseCaseText": [[]],
  "inputFormatting" : "Una lista de números enteros desordenada, sin corchetes y separados por comas. Espacio entre números opcional (Ej: 6,5,4,3,2)"
}