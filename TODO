
Nota: Habría que eliminar el parámetro Operation de los constructores de los diagramas, es bastante isulso.+--LLAMADA AL PROFE

Cosas que hacer:
-Todos los diagramas deben asegurarse si en los parámetros se ha pasado un valor del caso base. En tal caso, avisar al usuario
y no se muestra el diagrama.

-Que al seleccionar una solución incorrecta muestre el resultado de esa operación (en rojo si es incorrecto y en verde si es correcto) al lado
 de la solución original.

-la build para el jar.

-Hacerlo más bonito

-Generador de pseudocódigo o código python. El petate del diagrama iría en la izquierda y en la derecha, un campo de texto donde se va poniendo el
pseudocódigo. Depende de que se seleccione en los pasos anteriores pone un código u otro

-Plantearse si es necesario refactorizar los diagramas. Si lo es, hacer eso

Problemas:
-Hay problemas de compatibilidad para hacer la build, pero puede que se puedan arreglar cambiando el POM. Fijarse en los campos
de la versión de Java y <parent> <Version>

Para la refactorización de los diagramas, muchas de las propiedades pueden transformarse en objetos para tenerlo mucho mejor organizado. Aunque si
pasamos a JSON, hay que tener cuidado con eso. Mirar "java serialization with aggregation" para ver como hacerlo

Para el tema de la clase de algoritmos, podría mirarse de hacer en vez de una clase estática sola, crear una librería propia que poder importar.
Mirar cómo se puede hacer.

Recordar que para un problema es: Selecciona tamaño problema -> Selecciona caso base -> Introduce datos -> Selecciona reducción -> Selecciona solución.
Otra cosa importante es que el algoritmo seleccionado es la suma del id del tamaño problema + id de la reducción. Cuidao con eso
Ver que hacer con el tema del caso base, al seleccionarlo qué debería ocurrir.